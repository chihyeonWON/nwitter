{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setnewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","uid","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39b15564.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setnewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name===\"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n            // create newAccount\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        } else {\r\n            //log in\r\n            data = await authService.signInWithEmailAndPassword(email,password);\r\n        }\r\n    } catch (error) {\r\n        setError(error.message);\r\n    }\r\n    };\r\n\r\n    const toggleAccount = () => setnewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <div>\r\n            <>            \r\n                <form onSubmit={onSubmit}>\r\n                    <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                    <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                    <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                    {error}\r\n                </form>\r\n                <span onClick={toggleAccount}>\r\n                    {newAccount ? \"Sign In\" : \"Create Account\"}\r\n                </span>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n       const {\r\n           target:{name},\r\n       } = event;\r\n       let provider;\r\n       if(name===\"google\") {\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       } else if(name===\"github\") {\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       }\r\n       const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (       \r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();;\r\n           if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text:newNweet });\r\n        setEditing(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !==\"\") {\r\n        const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj}.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{ files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n                <input\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                    />\r\n                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n                    <input type=\"submit\" value=\"Nweet\" />\r\n                    {attachment && (\r\n                        <div>\r\n                            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                            <button onClick={onClearAttachment}>Clear</button>\r\n                        </div>\r\n                    )}     \r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n    return(\r\n       <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                     />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName: newDisplayName });\r\n            refreshUser();\r\n        }        \r\n    };\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName} \r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>    \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to = \"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to =\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </>                    \r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\"; \n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n\n  useEffect(()=> {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid:user.uid,\n          displayName:user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid:user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    }); \n  };\n\n  return(\n    <>\n      {init ? (\n      <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj}/> \n      ) : ( \n         \"initializing...\"\n      )}\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}