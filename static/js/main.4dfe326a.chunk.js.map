{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setnewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","uid","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","stlye","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4dfe326a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setnewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name===\"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n            // create newAccount\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        } else {\r\n            //log in\r\n            data = await authService.signInWithEmailAndPassword(email,password);\r\n        }\r\n    } catch (error) {\r\n        setError(error.message);\r\n    }\r\n    };\r\n\r\n    const toggleAccount = () => setnewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <div>\r\n            <>            \r\n                <form onSubmit={onSubmit} className=\"container\">\r\n                    <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                    <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                    <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\r\n                    {error && <span className=\"authError\">{error}</span>}\r\n                </form>\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"Sign In\" : \"Create Account\"}\r\n                </span>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n       const {\r\n           target:{name},\r\n       } = event;\r\n       let provider;\r\n       if(name===\"google\") {\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       } else if(name===\"github\") {\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       }\r\n       const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (       \r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();;\r\n           if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text:newNweet });\r\n        setEditing(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input onChange={onChange}\r\n                         value={newNweet}\r\n                        required\r\n                        placeholder=\"Edit your nweet\"\r\n                        autoFocus\r\n                        className=\"formInput\"\r\n                    />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\"   >Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash}/>\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />  \r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet == \"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !==\"\") {\r\n        const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj}.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{ files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)){\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factory__input\" \r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity:0,\r\n                }}\r\n                />\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={attachment}\r\n                            style={{\r\n                                backgroundImage:attachment,\r\n                            }}\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").orderBy(\"createdAt\",\"desc\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n    return(\r\n       <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop:30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                     />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName: newDisplayName });\r\n            refreshUser();\r\n        }        \r\n    };\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName} \r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" stlye={{\r\n                    marginTop:10,\r\n                }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>   \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return(\r\n        <nav>\r\n            <ul style={{ display:\"flex\", justifyContent:\"center\", marginTop:50 }}>\r\n                <li>\r\n                    <Link to = \"/\" style={{ marginRight:10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link \r\n                        to =\"/profile\"\r\n                        style={{\r\n                            marginLeft:10,\r\n                            display:\"flex\", \r\n                            flexDirection:\"column\",\r\n                            alignItems:\"center\",\r\n                            fontSize:12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop:10 }}>\r\n                            {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                        </span> \r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <div>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                                maxWidth:890,\r\n                                width:\"100%\",\r\n                                margin:\"0 auto\",\r\n                                marginTop:80,\r\n                                display:\"flex\",\r\n                                justifyContent:\"center\",\r\n                            }}\r\n                        >\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj} />\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                            </Route>\r\n                    </div>                  \r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\"; \n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n\n  useEffect(()=> {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid:user.uid,\n          displayName:user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid:user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    }); \n  };\n\n  return(\n    <>\n      {init ? (\n      <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj}/> \n      ) : ( \n         \"initializing...\"\n      )}\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}